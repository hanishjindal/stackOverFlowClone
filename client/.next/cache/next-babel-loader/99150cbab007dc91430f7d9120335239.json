{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\WorkSpace\\\\React\\\\StackOverflow-Clone\\\\stackoverflow-clone\\\\client\\\\components\\\\layout\\\\header\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useContext } from 'react';\nimport Link from 'next/link';\nimport cn from 'classnames';\nimport useComponentVisible from '../../../hooks/useComponentVisible';\nimport useWindowSize from '../../../hooks/useWindowSize';\nimport CONST from '../../../constants';\nimport ModalContext from '../../../store/modal';\nimport { AuthContext } from '../../../store/auth';\nimport Button from '../../button';\nimport NavigationDropdown from '../../navigation-dropdown';\nimport { Menu, Close, Logo } from '../../icons';\nimport styles from './header.module.css';\n\nvar Header = function Header(_ref) {\n  _s();\n\n  var className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var _useContext = useContext(ModalContext),\n      handleComponentVisible = _useContext.handleComponentVisible;\n\n  var _useContext2 = useContext(AuthContext),\n      isAuthenticated = _useContext2.isAuthenticated,\n      authState = _useContext2.authState,\n      logout = _useContext2.logout;\n\n  var _useComponentVisible = useComponentVisible(false),\n      ref = _useComponentVisible.ref,\n      toggleRef = _useComponentVisible.toggleRef,\n      isComponentVisible = _useComponentVisible.isComponentVisible,\n      setIsComponentVisible = _useComponentVisible.setIsComponentVisible;\n\n  var size = useWindowSize();\n  useEffect(function () {\n    if (size.width > CONST.MOBILE_SIZE) {\n      setIsComponentVisible(false);\n    }\n  }, [size]);\n  return __jsx(\"header\", _extends({\n    className: cn(styles.header, className)\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    ref: toggleRef,\n    className: styles.menuContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    className: styles.menu,\n    onClick: function onClick() {\n      return setIsComponentVisible(function (isOpen) {\n        return !isOpen;\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, isComponentVisible ? __jsx(Close, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 35\n    }\n  }) : __jsx(Menu, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 47\n    }\n  }))), __jsx(Button, {\n    className: styles.logo,\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"clone-of-stack\", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }\n  }, \"overflow\"))), __jsx(\"div\", {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), isAuthenticated() ? __jsx(\"div\", {\n    className: styles.userInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Welcome\", ' ', __jsx(Link, {\n    href: \"/users/[user]\",\n    as: \"/users/\".concat(authState.userInfo.username),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, authState.userInfo.username, \"!\"))), __jsx(\"a\", {\n    onClick: function onClick() {\n      return logout();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"log out\")) : __jsx(React.Fragment, null, __jsx(Button, {\n    className: styles.auth,\n    secondary: true,\n    onClick: function onClick() {\n      return handleComponentVisible(true, 'login');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Log in\"), __jsx(Button, {\n    className: styles.auth,\n    primary: true,\n    onClick: function onClick() {\n      return handleComponentVisible(true, 'signup');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Sign up\"))), __jsx(\"div\", {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, isComponentVisible && __jsx(NavigationDropdown, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 45\n    }\n  })));\n};\n\n_s(Header, \"KRXE+r9kfQubRZx3XK2YRbg8rec=\", false, function () {\n  return [useComponentVisible, useWindowSize];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["D:/WorkSpace/React/StackOverflow-Clone/stackoverflow-clone/client/components/layout/header/index.js"],"names":["React","useEffect","useContext","Link","cn","useComponentVisible","useWindowSize","CONST","ModalContext","AuthContext","Button","NavigationDropdown","Menu","Close","Logo","styles","Header","className","props","handleComponentVisible","isAuthenticated","authState","logout","ref","toggleRef","isComponentVisible","setIsComponentVisible","size","width","MOBILE_SIZE","header","container","menuContainer","menu","isOpen","logo","flex","userInfo","username","auth"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from 'react'\r\nimport Link from 'next/link'\r\nimport cn from 'classnames'\r\n\r\nimport useComponentVisible from '../../../hooks/useComponentVisible'\r\nimport useWindowSize from '../../../hooks/useWindowSize'\r\nimport CONST from '../../../constants'\r\nimport ModalContext from '../../../store/modal'\r\nimport { AuthContext } from '../../../store/auth'\r\n\r\nimport Button from '../../button'\r\nimport NavigationDropdown from '../../navigation-dropdown'\r\nimport { Menu, Close, Logo } from '../../icons'\r\n\r\nimport styles from './header.module.css'\r\n\r\nconst Header = ({ className, ...props }) => {\r\n  const { handleComponentVisible } = useContext(ModalContext)\r\n  const { isAuthenticated, authState, logout } = useContext(AuthContext)\r\n\r\n  const {\r\n    ref,\r\n    toggleRef,\r\n    isComponentVisible,\r\n    setIsComponentVisible\r\n  } = useComponentVisible(false)\r\n  const size = useWindowSize()\r\n\r\n  useEffect(() => {\r\n    if (size.width > CONST.MOBILE_SIZE) {\r\n      setIsComponentVisible(false)\r\n    }\r\n  }, [size])\r\n\r\n  return (\r\n    <header className={cn(styles.header, className)} {...props}>\r\n      <div className={styles.container}>\r\n        <div ref={toggleRef} className={styles.menuContainer}>\r\n          <Button\r\n            className={styles.menu}\r\n            onClick={() => setIsComponentVisible((isOpen) => !isOpen)}\r\n          >\r\n            {isComponentVisible ? <Close /> : <Menu />}\r\n          </Button>\r\n        </div>\r\n        <Button className={styles.logo} href=\"/\">\r\n          <Logo />\r\n          <p>\r\n            clone-of-stack<span>overflow</span>\r\n          </p>\r\n        </Button>\r\n        <div style={{ flex: 1 }}></div>\r\n\r\n        {isAuthenticated() ? (\r\n          <div className={styles.userInfo}>\r\n            <p>\r\n              Welcome{' '}\r\n              <Link\r\n                href=\"/users/[user]\"\r\n                as={`/users/${authState.userInfo.username}`}\r\n              >\r\n                <a>{authState.userInfo.username}!</a>\r\n              </Link>\r\n            </p>\r\n            <a onClick={() => logout()}>log out</a>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              className={styles.auth}\r\n              secondary\r\n              onClick={() => handleComponentVisible(true, 'login')}\r\n            >\r\n              Log in\r\n            </Button>\r\n            <Button\r\n              className={styles.auth}\r\n              primary\r\n              onClick={() => handleComponentVisible(true, 'signup')}\r\n            >\r\n              Sign up\r\n            </Button>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div ref={ref}>{isComponentVisible && <NavigationDropdown />}</div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n"]},"metadata":{},"sourceType":"module"}