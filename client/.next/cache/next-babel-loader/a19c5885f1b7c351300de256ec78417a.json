{"ast":null,"code":"var _jsxFileName = \"F:\\\\StackoverflowClone\\\\client\\\\pages\\\\users\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { publicFetch } from '../../util/fetcher';\nimport Layout from '../../components/layout';\nimport PageTitle from '../../components/page-title';\nimport SearchInput from '../../components/search-input';\nimport UserList from '../../components/user-list';\nimport UserItem from '../../components/user-list/user-item';\nimport { Spinner } from '../../components/icons';\n\nfunction UsersPage() {\n  const {\n    0: searchTerm,\n    1: setSearchTerm\n  } = useState(null);\n  const {\n    0: users,\n    1: setUsers\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    if (searchTerm === null) {\n      const fetchUser = async () => {\n        const {\n          data\n        } = await publicFetch.get('/users');\n        setUsers(data);\n      };\n\n      fetchUser();\n    } else {\n      const delayDebounceFn = setTimeout(async () => {\n        setLoading(true);\n        const {\n          data\n        } = await publicFetch.get(searchTerm ? `/users/${searchTerm}` : `/users`);\n        setUsers(data);\n        setLoading(false);\n      }, 500);\n      return () => clearTimeout(delayDebounceFn);\n    }\n  }, [searchTerm]);\n  return __jsx(Layout, {\n    extra: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Users - Clone of Stackoverflow\")), __jsx(PageTitle, {\n    title: \"Users\",\n    borderBottom: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), __jsx(SearchInput, {\n    placeholder: \"Search by user\",\n    isLoading: loading,\n    autoFocus: true,\n    autoComplete: \"off\",\n    type: \"text\",\n    onChange: e => setSearchTerm(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), !users && __jsx(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), users && __jsx(React.Fragment, null, __jsx(UserList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, users === null || users === void 0 ? void 0 : users.map(({\n    username,\n    profilePhoto,\n    created,\n    id\n  }) => __jsx(UserItem, {\n    key: id,\n    username: username,\n    profilePhoto: profilePhoto,\n    created: created,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }))), users.length == 0 && __jsx(\"p\", {\n    className: \"not-found\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"No users matched your search.\")));\n}\n\nexport default UsersPage;","map":{"version":3,"sources":["F:/StackoverflowClone/client/pages/users/index.js"],"names":["React","useEffect","useState","Head","publicFetch","Layout","PageTitle","SearchInput","UserList","UserItem","Spinner","UsersPage","searchTerm","setSearchTerm","users","setUsers","loading","setLoading","fetchUser","data","get","delayDebounceFn","setTimeout","clearTimeout","e","target","value","map","username","profilePhoto","created","id","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,SAASC,OAAT,QAAwB,wBAAxB;;AAEA,SAASC,SAAT,GAAqB;AACnB,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BX,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM;AAAA,OAACY,KAAD;AAAA,OAAQC;AAAR,MAAoBb,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACc,OAAD;AAAA,OAAUC;AAAV,MAAwBf,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,UAAU,KAAK,IAAnB,EAAyB;AACvB,YAAMM,SAAS,GAAG,YAAY;AAC5B,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMf,WAAW,CAACgB,GAAZ,CAAgB,QAAhB,CAAvB;AACAL,QAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,OAHD;;AAKAD,MAAAA,SAAS;AACV,KAPD,MAOO;AACL,YAAMG,eAAe,GAAGC,UAAU,CAAC,YAAY;AAC7CL,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAM;AAAEE,UAAAA;AAAF,YAAW,MAAMf,WAAW,CAACgB,GAAZ,CACrBR,UAAU,GAAI,UAASA,UAAW,EAAxB,GAA6B,QADlB,CAAvB;AAGAG,QAAAA,QAAQ,CAACI,IAAD,CAAR;AACAF,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAPiC,EAO/B,GAP+B,CAAlC;AASA,aAAO,MAAMM,YAAY,CAACF,eAAD,CAAzB;AACD;AACF,GApBQ,EAoBN,CAACT,UAAD,CApBM,CAAT;AAsBA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CADF,EAKE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAyB,IAAA,YAAY,EAAE,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAOE,MAAC,WAAD;AACE,IAAA,WAAW,EAAC,gBADd;AAEE,IAAA,SAAS,EAAEI,OAFb;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,YAAY,EAAC,KAJf;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,QAAQ,EAAGQ,CAAD,IAAOX,aAAa,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAgBG,CAACZ,KAAD,IACC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBJ,EAsBGA,KAAK,IACJ,4BACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,aACGA,KADH,uBACGA,KAAK,CAAEa,GAAP,CAAW,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,OAA1B;AAAmCC,IAAAA;AAAnC,GAAD,KACV,MAAC,QAAD;AACE,IAAA,GAAG,EAAEA,EADP;AAEE,IAAA,QAAQ,EAAEH,QAFZ;AAGE,IAAA,YAAY,EAAEC,YAHhB;AAIE,IAAA,OAAO,EAAEC,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,EAYGhB,KAAK,CAACkB,MAAN,IAAgB,CAAhB,IACC;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAbJ,CAvBJ,CADF;AA2CD;;AAED,eAAerB,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Head from 'next/head'\r\n\r\nimport { publicFetch } from '../../util/fetcher'\r\n\r\nimport Layout from '../../components/layout'\r\nimport PageTitle from '../../components/page-title'\r\nimport SearchInput from '../../components/search-input'\r\nimport UserList from '../../components/user-list'\r\nimport UserItem from '../../components/user-list/user-item'\r\nimport { Spinner } from '../../components/icons'\r\n\r\nfunction UsersPage() {\r\n  const [searchTerm, setSearchTerm] = useState(null)\r\n  const [users, setUsers] = useState(null)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (searchTerm === null) {\r\n      const fetchUser = async () => {\r\n        const { data } = await publicFetch.get('/users')\r\n        setUsers(data)\r\n      }\r\n\r\n      fetchUser()\r\n    } else {\r\n      const delayDebounceFn = setTimeout(async () => {\r\n        setLoading(true)\r\n        const { data } = await publicFetch.get(\r\n          searchTerm ? `/users/${searchTerm}` : `/users`\r\n        )\r\n        setUsers(data)\r\n        setLoading(false)\r\n      }, 500)\r\n\r\n      return () => clearTimeout(delayDebounceFn)\r\n    }\r\n  }, [searchTerm])\r\n\r\n  return (\r\n    <Layout extra={false}>\r\n      <Head>\r\n        <title>Users - Clone of Stackoverflow</title>\r\n      </Head>\r\n\r\n      <PageTitle title=\"Users\" borderBottom={false} />\r\n\r\n      <SearchInput\r\n        placeholder=\"Search by user\"\r\n        isLoading={loading}\r\n        autoFocus\r\n        autoComplete=\"off\"\r\n        type=\"text\"\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n\r\n      {!users && (\r\n        <div className=\"loading\">\r\n          <Spinner />\r\n        </div>\r\n      )}\r\n\r\n      {users && (\r\n        <>\r\n          <UserList>\r\n            {users?.map(({ username, profilePhoto, created, id }) => (\r\n              <UserItem\r\n                key={id}\r\n                username={username}\r\n                profilePhoto={profilePhoto}\r\n                created={created}\r\n              />\r\n            ))}\r\n          </UserList>\r\n\r\n          {users.length == 0 && (\r\n            <p className=\"not-found\">No users matched your search.</p>\r\n          )}\r\n        </>\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default UsersPage\r\n"]},"metadata":{},"sourceType":"module"}