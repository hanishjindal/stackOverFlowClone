{"ast":null,"code":"var _jsxFileName = \"F:\\\\StackoverflowClone\\\\client\\\\components\\\\auth-forms\\\\signup-form\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { publicFetch } from '../../../util/fetcher';\nimport { AuthContext } from '../../../store/auth';\nimport ModalContext from '../../../store/modal';\nimport FormInput from '../../form-input';\nimport Button from '../../button';\nimport styles from './signup-form.module.css';\n\nconst SignupForm = () => {\n  const {\n    setAuthState\n  } = useContext(AuthContext);\n  const {\n    setIsComponentVisible\n  } = useContext(ModalContext);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  return __jsx(Formik, {\n    initialValues: {\n      username: '',\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    },\n    onSubmit: async (values, {\n      setStatus,\n      resetForm\n    }) => {\n      setLoading(true);\n\n      try {\n        const {\n          data\n        } = await publicFetch.post('signup', values);\n        const {\n          token,\n          expiresAt,\n          userInfo\n        } = data;\n        setAuthState({\n          token,\n          expiresAt,\n          userInfo\n        });\n        resetForm({});\n        setIsComponentVisible(false);\n      } catch (error) {\n        setStatus(error.response.data.message);\n      }\n\n      setLoading(false);\n    },\n    validationSchema: Yup.object({\n      username: Yup.string().required('Required').max(16, 'Must be at most 16 characters long').matches(/^[a-zA-Z0-9_-]+$/, 'Contains invalid characters'),\n      email: Yup.string().required('Required').matches(/^[a-zA-Z0-9]+@+[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$/, 'Please Enter A Valid Email'),\n      password: Yup.string().required('Required').min(6, 'Must be at least 6 characters long').max(50, 'Must be at most 50 characters long'),\n      passwordConfirmation: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    status,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(FormInput, {\n    label: \"Username\",\n    type: \"text\",\n    name: \"username\",\n    autoComplete: \"off\",\n    value: values.username,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    hasError: touched.username && errors.username,\n    errorMessage: errors.username && errors.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), __jsx(FormInput, {\n    label: \"Email\",\n    type: \"email\",\n    name: \"email\",\n    autoComplete: \"off\",\n    value: values.email,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    hasError: touched.email && errors.email,\n    errorMessage: errors.email && errors.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), __jsx(FormInput, {\n    label: \"Password\",\n    type: \"password\",\n    name: \"password\",\n    autoComplete: \"off\",\n    value: values.password,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    hasError: touched.password && errors.password,\n    errorMessage: errors.password && errors.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), __jsx(FormInput, {\n    label: \"Password Confirm\",\n    type: \"password\",\n    name: \"passwordConfirmation\",\n    autoComplete: \"off\",\n    value: values.passwordConfirmation,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    hasError: touched.passwordConfirmation && errors.passwordConfirmation,\n    errorMessage: errors.passwordConfirmation && errors.passwordConfirmation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), __jsx(\"p\", {\n    className: styles.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, status), __jsx(Button, {\n    primary: true,\n    full: true,\n    className: styles.submitButton,\n    disabled: isSubmitting,\n    isLoading: loading,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Sign up\")));\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["F:/StackoverflowClone/client/components/auth-forms/signup-form/index.js"],"names":["React","useState","useContext","Formik","Yup","publicFetch","AuthContext","ModalContext","FormInput","Button","styles","SignupForm","setAuthState","setIsComponentVisible","loading","setLoading","username","email","password","passwordConfirmation","values","setStatus","resetForm","data","post","token","expiresAt","userInfo","error","response","message","object","string","required","max","matches","min","oneOf","ref","errors","touched","status","handleChange","handleBlur","handleSubmit","isSubmitting","form","submitButton"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nimport { publicFetch } from '../../../util/fetcher'\r\nimport { AuthContext } from '../../../store/auth'\r\nimport ModalContext from '../../../store/modal'\r\n\r\nimport FormInput from '../../form-input'\r\nimport Button from '../../button'\r\n\r\nimport styles from './signup-form.module.css'\r\n\r\nconst SignupForm = () => {\r\n  const { setAuthState } = useContext(AuthContext)\r\n  const { setIsComponentVisible } = useContext(ModalContext)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ username: '',email: '', password: '', passwordConfirmation: '' }}\r\n      onSubmit={async (values, { setStatus, resetForm }) => {\r\n        setLoading(true)\r\n        try {\r\n          const { data } = await publicFetch.post('signup', values)\r\n          const { token, expiresAt, userInfo } = data\r\n          setAuthState({ token, expiresAt, userInfo })\r\n          resetForm({})\r\n          setIsComponentVisible(false)\r\n        } catch (error) {\r\n          setStatus(error.response.data.message)\r\n        }\r\n        setLoading(false)\r\n      }}\r\n      validationSchema={Yup.object({\r\n        username: Yup.string()\r\n          .required('Required')\r\n          .max(16, 'Must be at most 16 characters long')\r\n          .matches(/^[a-zA-Z0-9_-]+$/, 'Contains invalid characters'),\r\n        email: Yup.string()\r\n          .required('Required')\r\n          .matches(/^[a-zA-Z0-9]+@+[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$/, 'Please Enter A Valid Email'),\r\n        password: Yup.string()\r\n          .required('Required')\r\n          .min(6, 'Must be at least 6 characters long')\r\n          .max(50, 'Must be at most 50 characters long'),\r\n        passwordConfirmation: Yup.string().oneOf(\r\n          [Yup.ref('password'), null],\r\n          'Passwords must match'\r\n        )\r\n      })}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        status,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting\r\n      }) => (\r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n          <FormInput\r\n            label=\"Username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            autoComplete=\"off\"\r\n            value={values.username}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            hasError={touched.username && errors.username}\r\n            errorMessage={errors.username && errors.username}\r\n          />\r\n          <FormInput\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            autoComplete=\"off\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            hasError={touched.email && errors.email}\r\n            errorMessage={errors.email && errors.email}\r\n          />\r\n          <FormInput\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            autoComplete=\"off\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            hasError={touched.password && errors.password}\r\n            errorMessage={errors.password && errors.password}\r\n          />\r\n          <FormInput\r\n            label=\"Password Confirm\"\r\n            type=\"password\"\r\n            name=\"passwordConfirmation\"\r\n            autoComplete=\"off\"\r\n            value={values.passwordConfirmation}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            hasError={\r\n              touched.passwordConfirmation && errors.passwordConfirmation\r\n            }\r\n            errorMessage={\r\n              errors.passwordConfirmation && errors.passwordConfirmation\r\n            }\r\n          />\r\n          <p className={styles.status}>{status}</p>\r\n          <Button\r\n            primary\r\n            full\r\n            className={styles.submitButton}\r\n            disabled={isSubmitting}\r\n            isLoading={loading}\r\n            type=\"submit\"\r\n          >\r\n            Sign up\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default SignupForm\r\n"]},"metadata":{},"sourceType":"module"}