{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkSpace\\\\React\\\\StackOverflow-Clone\\\\stackoverflow-clone\\\\client\\\\store\\\\fetch.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from './auth';\nimport { baseURL } from '../util/fetcher';\nconst FetchContext = createContext();\nconst {\n  Provider\n} = FetchContext;\n\nconst FetchProvider = ({\n  children\n}) => {\n  const {\n    authState\n  } = useContext(AuthContext);\n  const authAxios = axios.create({\n    baseURL\n  });\n  authAxios.interceptors.request.use(config => {\n    config.headers.Authorization = `Bearer ${authState.token}`;\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n  authAxios.interceptors.response.use(response => {\n    return response;\n  }, error => {\n    const code = error && error.response ? error.response.status : 0;\n\n    if (code === 401 || code === 403) {\n      console.log('error code', code);\n    }\n\n    return Promise.reject(error);\n  });\n  return __jsx(Provider, {\n    value: {\n      authAxios\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { FetchContext, FetchProvider };","map":{"version":3,"sources":["D:/WorkSpace/React/StackOverflow-Clone/stackoverflow-clone/client/store/fetch.js"],"names":["React","createContext","useContext","axios","AuthContext","baseURL","FetchContext","Provider","FetchProvider","children","authState","authAxios","create","interceptors","request","use","config","headers","Authorization","token","error","Promise","reject","response","code","status","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,MAAMC,YAAY,GAAGL,aAAa,EAAlC;AACA,MAAM;AAAEM,EAAAA;AAAF,IAAeD,YAArB;;AAEA,MAAME,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAgBR,UAAU,CAACE,WAAD,CAAhC;AAEA,QAAMO,SAAS,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC7BP,IAAAA;AAD6B,GAAb,CAAlB;AAIAM,EAAAA,SAAS,CAACE,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CACGC,MAAD,IAAY;AACVA,IAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAAgC,UAASR,SAAS,CAACS,KAAM,EAAzD;AACA,WAAOH,MAAP;AACD,GAJH,EAKGI,KAAD,IAAW;AACT,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,GAPH;AAUAT,EAAAA,SAAS,CAACE,YAAV,CAAuBU,QAAvB,CAAgCR,GAAhC,CACGQ,QAAD,IAAc;AACZ,WAAOA,QAAP;AACD,GAHH,EAIGH,KAAD,IAAW;AACT,UAAMI,IAAI,GAAGJ,KAAK,IAAIA,KAAK,CAACG,QAAf,GAA0BH,KAAK,CAACG,QAAN,CAAeE,MAAzC,GAAkD,CAA/D;;AACA,QAAID,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAK,GAA7B,EAAkC;AAChCE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,IAA1B;AACD;;AACD,WAAOH,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,GAVH;AAaA,SACE,MAAC,QAAD;AACE,IAAA,KAAK,EAAE;AACLT,MAAAA;AADK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGF,QALH,CADF;AASD,CAvCD;;AAyCA,SAASH,YAAT,EAAuBE,aAAvB","sourcesContent":["import React, { createContext, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { AuthContext } from './auth'\r\nimport { baseURL } from '../util/fetcher'\r\n\r\nconst FetchContext = createContext()\r\nconst { Provider } = FetchContext\r\n\r\nconst FetchProvider = ({ children }) => {\r\n  const { authState } = useContext(AuthContext)\r\n\r\n  const authAxios = axios.create({\r\n    baseURL\r\n  })\r\n\r\n  authAxios.interceptors.request.use(\r\n    (config) => {\r\n      config.headers.Authorization = `Bearer ${authState.token}`\r\n      return config\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  authAxios.interceptors.response.use(\r\n    (response) => {\r\n      return response\r\n    },\r\n    (error) => {\r\n      const code = error && error.response ? error.response.status : 0\r\n      if (code === 401 || code === 403) {\r\n        console.log('error code', code)\r\n      }\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  return (\r\n    <Provider\r\n      value={{\r\n        authAxios\r\n      }}\r\n    >\r\n      {children}\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport { FetchContext, FetchProvider }\r\n"]},"metadata":{},"sourceType":"module"}